# -*- coding: utf-8 -*-
"""Konsep pemrograman fungsional

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10taw_gbGk4IBEYYhcsd7LdQWfdj9xCEx

MODUL 1 â€“ Konsep pemrograman fungsional menggunakan bahasa python.

1. Ada dua jenis akun, akun user dan akun admin
2. Akun admin dapat melakukan input buku yang akan dipinjam
3. Akun user dapat melakukan peminjaman buku yang tersedia
4. Buku yang sudah dipinjam tidak dapat dipinjam oleh user lain.
5. Akun user harus dapat mengembalikan buku.
"""

# ADMIN
class Admin:
    def input_buku(self, daftar_buku_admin):
        judul = input("Masukkan judul buku: ")
        penulis = input("Masukkan nama penulis: ")
        tahun_terbit = input("Masukkan tahun terbit: ")
        buku = {"judul": judul, "penulis": penulis, "tahun_terbit": tahun_terbit}
        daftar_buku_admin.append(buku)
        print("Buku berhasil ditambahkan.")

if __name__ == "__main__":
    daftar_buku_admin = []
    admin = Admin()
    while True:
        print("\nMenu Admin:")
        print("1. Input Buku")
        print("2. Keluar")
        pilihan = input("Pilih menu: ")

        if pilihan == "1":
            admin.input_buku(daftar_buku_admin)
        elif pilihan == "2":
            print("Terima kasih, admin!")
            break
        else:
            print("Pilihan tidak valid.")

# USER
class User:
    def __init__(self):
        self.daftar_buku_dipinjam = []

    def pinjam_buku(self, daftar_buku_admin):
        if not daftar_buku_admin:
            print("Tidak ada buku yang tersedia untuk dipinjam.")
            return

        print("\nDaftar Buku Tersedia:")
        for idx, buku in enumerate(daftar_buku_admin):
            print(f"{idx + 1}. Judul: {buku['judul']}")

        try:
            pilihan_buku = int(input("Pilih buku yang ingin Anda pinjam (nomor): ")) - 1

            if 0 <= pilihan_buku < len(daftar_buku_admin):
                buku_dipinjam = daftar_buku_admin.pop(pilihan_buku)
                self.daftar_buku_dipinjam.append(buku_dipinjam)
                print(f"Anda berhasil meminjam buku '{buku_dipinjam['judul']}'")
            else:
                print("Nomor buku tidak valid.")
        except ValueError:
            print("Input tidak valid. Masukkan nomor buku yang valid.")

    def kembalikan_buku(self, daftar_buku_admin):
        if not self.daftar_buku_dipinjam:
            print("Anda belum meminjam buku apapun.")
            return

        print("\nDaftar Buku yang Anda Pinjam:")
        for idx, buku in enumerate(self.daftar_buku_dipinjam):
            print(f"{idx + 1}. Judul: {buku['judul']}")

        try:
            pilihan_buku = int(input("Pilih buku yang ingin Anda kembalikan (nomor): ")) - 1

            if 0 <= pilihan_buku < len(self.daftar_buku_dipinjam):
                buku_dikembalikan = self.daftar_buku_dipinjam.pop(pilihan_buku)
                daftar_buku_admin.append(buku_dikembalikan)
                print(f"Anda telah mengembalikan buku '{buku_dikembalikan['judul']}'")
            else:
                print("Nomor buku tidak valid.")
        except ValueError:
            print("Input tidak valid. Masukkan nomor buku yang valid.")


if __name__ == "__main__":
    user = User()
    while True:
        print("\nMenu User:")
        print("1. Pinjam Buku")
        print("2. Kembalikan Buku")
        print("3. Keluar")
        pilihan = input("Pilih menu: ")

        if pilihan == "1":
            user.pinjam_buku(daftar_buku_admin)
        elif pilihan == "2":
            user.kembalikan_buku(daftar_buku_admin)
        elif pilihan == "3":
            print("Terima kasih, user!")
            break
        else:
            print("Pilihan tidak valid.")